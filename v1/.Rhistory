shiny::runApp()
list(unique(hotels$Classement.HOT)[order(unique(hotels$Classement.HOT))]
)
list("Research" , "Education" , "Public" )
unlist(list(unique(hotels$Classement.HOT)[order(unique(hotels$Classement.HOT))]
))
list(unlist(list(unique(hotels$Classement.HOT)[order(unique(hotels$Classement.HOT))]
)))
unique(hotels$Classement.HOT)[order(unique(hotels$Classement.HOT))]
"Research" , "Education" , "Public"
unique(hotels$Classement.HOT)[order(unique(hotels$Classement.HOT))]
)
unique(hotels$Classement.HOT)[order(unique(hotels$Classement.HOT))]
list(unique(hotels$Classement.HOT)[order(unique(hotels$Classement.HOT))])
liste_classement <- unique(hotels$Classement.HOT)[order(unique(hotels$Classement.HOT))]
split(liste_classement, seq(nrow(liste_classement)))
liste_classement
seq(nrow(liste_classement))
liste_classement <- data.frame(unique(hotels$Classement.HOT)[order(unique(hotels$Classement.HOT))])
# create dataset and base layer ----
datasets <- list(
'Hotels'=hotels
)
liste_classement
names(liste_classement) <- "Classement"
liste_classement
split(liste_classement, seq(nrow(liste_classement)))
choices = split(liste_classement, seq(nrow(liste_classement)))
View(choices)
runApp()
runApp()
runApp()
choices = setNames(split(liste_classement, seq(nrow(liste_classement))), rownames(liste_classement))
choices = setNames(split(liste_classement, seq(nrow(liste_classement))), rownames(liste_classement))
View(choices)
choices
xy.df <- data.frame(x = runif(10),  y = runif(10))
View(xy.df)
xy.list <- split(xy.df, seq(nrow(xy.df)))
View(xy.list)
xy.list <- setNames(split(xy.df, seq(nrow(xy.df))), rownames(xy.df))
View(xy.list)
View(xy.list)
runApp()
choices = setNames(split(liste_classement, seq(nrow(liste_classement))), rownames(liste_classement))
choices[[1]]
liste_classement <- unique(hotels$Classement.HOT)[order(unique(hotels$Classement.HOT))]
choices = as.list(liste_classement)
View(choices)
choices[[1]]
runApp()
runApp()
runApp()
?barplot
runApp()
runApp()
runApp()
runApp()
tN <- table(Ni <- stats::rpois(100, lambda = 5))
tN
test <- aggregate(hotels$id~hotels$Classement.HOT,data = hotels, sum)
View(test)
View(test)
View(test)
runApp()
runApp()
runApp()
dim(nbHotelClassement)
nbHotelClassement$nombre
nbHotelClassement
runApp()
nbHotelClassement<- aggregate(hotels$id~hotels$Classement.HOT,data = hotels, count)
nbHotelClassement<- aggregate(hotels@data$id~hotels@data$Classement.HOT,data = hotels, count)
runApp()
runApp()
nbHotelClassement<- aggregate(hotels$id~hotels$Classement.HOT,data = hotels, count)
class(hotels)
class(hotels@data)
nbHotelClassement<- aggregate(hotels@data$id~hotels@data$Classement.HOT,data = hotels@data, count)
nbHotelClassement<- aggregate(hotels@data$id~hotels@data$Classement.HOT,data = hotels@data, length)
nbHotelClassement<- aggregate(hotels$id~hotels$Classement.HOT,data = hotels, length)
View(nbHotelClassement)
runApp()
runApp()
runApp()
nbHotelClassement$nb
barplot(height = nbHotelClassement$nb)
runApp()
?barplot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
